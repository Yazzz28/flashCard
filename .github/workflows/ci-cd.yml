name: CI/CD Pipeline

on:
    push:
        branches: [main, develop, refacto-copilot]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linters
              run: npm run lint

            - name: Run unit tests
              run: npm run test:unit

            - name: Run integration tests
              run: npm run test:integration

            - name: Install Playwright browsers
              run: npx playwright install

            - name: Run E2E tests
              run: npm run test:e2e

            - name: Upload test results
              uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: test-results-${{ matrix.node-version }}
                  path: |
                      coverage/
                      test-results/
                      playwright-report/

            - name: Build application
              run: npm run build

    deploy:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build for production
              run: npm run build

            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./public
                  cname: wildcards.example.com # Optionnel: domaine personnalis√©
